#var server_epoch_difference {}

#nop {Argument should be a date recognised by the date utility}
#nop {e.g. 17-MAR-2017 16:59}
#function {date_to_epoch} {
	#system {echo "#var result $(date --date="%1" +%s)" 1> result.tt};
	#read result.tt;
	#system {rm result.tt};
}

#nop {Wed Mar 15 11:59:59 2017}
#action {^The current system time is %1 %2 %3 %4:%5:%6 %7} {
	#math {server_epoch_difference} {@date_to_epoch{{%3-%2-%7 %4:%5:%6}} - @get_epoch{}};
}

#function {seconds_to_duration} {
	#system {echo "#var result $(date -u -d @%1 +"%T")" 1> result.txt};
	#read result.txt;
	#system {rm result.txt};
}

#function {get_server_epoch} {
	#if {"$server_epoch_difference" == ""} {
		#return 0;
	};
	#math result {@get_epoch{} + $server_epoch_difference};
}

#function {get_epoch} {
	#format result %U;
	#math result {$result / 1000000};
}

#function {get_days_until_server_epoch} {
	#if {@get_server_epoch{} == 0} {
		#return 0;
	};
	#math result {(%1 - @get_server_epoch{}) / 86400};
}

#function {prettify} {
	#if {%1 >= 1000000000} {
		#format {return} {%.2f} {%1 / 1000000000};
		#var return {${return}b};
	} {
		#if {%1 >= 1000000} {
			#format {return} {%.2f} {%1 / 1000000};
			#var return {${return}m};
		} {
			#if {%1 >= 1000} {
				#format {return} {%.2f} {%1 / 1000};
				#var return {${return}k};
			} {
				#var return {%1};
			}
		};
	};

	#nop {Strip off .00};

	#regexp {$return} {{\d+}.00{.}} {
		#var return {&1&2};
	};

	#return $return
}

#function {negative} {
	#math result {0 - %1};
}

#function {math} {
	#math result {%0};
}

#function {commas} {
	#format result %g {%0};
}

#nop {
	%1 whole
	%2 part
}

#function {is_abbrev} {
	#regexp {%2} {%i^%2%*} {
		#return 1;
	} {
		#return 0;
	};
}
